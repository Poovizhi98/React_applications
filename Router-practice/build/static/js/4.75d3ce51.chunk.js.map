{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData","console","log"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,kFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,gCC0D/BC,EAtDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAoCE,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OACE,qCACA,cAAC,IAAD,CACEC,KAAMF,EACNG,QAAS,SAACC,GAAD,MAAa,mEACxB,cAAC,EAAD,UACE,uBAAMC,QAde,WACvBJ,GAAc,IAaqBV,UAAWC,IAAQc,KAAMC,SAzB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAiB9C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQC,QA1BW,WACzB1B,GAAc,IAyB6BV,UAAU,MAA/C,kC,gBCvBKqC,UAxBE,SAACtC,GAEd,IAAMuC,EAAUC,cAChB,EAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAErBC,qBAAU,WACU,cAAXD,GACDL,EAAQO,KAAK,aAElB,CAACF,EAAQL,IAQZ,OACI,mCACG,cAAC,EAAD,CAAWZ,UAAsB,YAAXiB,EAAsBpB,WAR3B,SAACuB,GAErBC,QAAQC,IAAIF,GACZJ,EAAYI","file":"static/js/4.75d3ce51.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__ykj1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__2rk8c\",\"loading\":\"QuoteForm_loading__35dah\",\"control\":\"QuoteForm_control__2zfGK\",\"actions\":\"QuoteForm_actions__3olD8\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { Prompt } from 'react-router-dom';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntering, setIsEntering] = useState(false);\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const focusFormHandler = () => {\n    setIsEntering(true);\n  }\n\n  const formEnteredHandler = () => {\n    setIsEntering(false);\n  }\n\n  return (\n    <>\n    <Prompt \n      when={isEntering}\n      message={(location)=> 'Are u sure want to leave? All your entered data will be lost!'}/>\n    <Card>\n      <form onFocus={focusFormHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={formEnteredHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport { useHistory } from 'react-router';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = (props) => {\r\n\r\n    const history = useHistory();\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n\r\n    useEffect(() => {\r\n        if ( status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history])\r\n\r\n    const addQuoteHandler = (quoteData) => {\r\n        // send to server\r\n        console.log(quoteData);\r\n        sendRequest(quoteData);\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NewQuote;"],"sourceRoot":""}