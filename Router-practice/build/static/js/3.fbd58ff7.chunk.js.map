{"version":3,"sources":["components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","commentValue","current","value","preventDefault","quoteId","commentData","console","log","form","onSubmit","LoadingSpinner","control","htmlFor","rows","ref","actions","Comments","getAllComments","loadedComments","data","useState","isAddingComment","setIsAddingComment","useParams","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetail","getSingleQuote","match","useRouteMatch","exact","path","to","url"],"mappings":"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","file":"static/js/3.fbd58ff7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3Q2cc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1Rn2Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__LTjbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form___JihE\",\"loading\":\"NewCommentForm_loading__-CQci\",\"control\":\"NewCommentForm_control__3BuDv\",\"actions\":\"NewCommentForm_actions__2FyMb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2r292\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    const commentValue = commentTextRef.current.value;\n    event.preventDefault();\n    sendRequest({ quoteId: props.quoteId, commentData: { text:commentValue } })\n\n    // optional: Could validate here\n\n    // send comment to server\n    console.log(props.quoteId, 'comment');\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      { status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner/>\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const { sendRequest, data: loadedComments, status } = useHttp(getAllComments);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  \n  if (status === 'pending') {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner/>\n      </div>\n    )\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from 'react';\r\nimport { Route, useParams, Link, useRouteMatch } from 'react-router-dom';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = (props) => {\r\n\r\n    const { sendRequest, data, error, status } = useHttp(getSingleQuote, true);\r\n\r\n    const match = useRouteMatch();\r\n\r\n    const params = useParams();\r\n\r\n    const { quoteId } = params;\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if (error) {\r\n        return <p className='centered'>\r\n            {error}\r\n        </p>\r\n    }\r\n\r\n    if (status === 'pending' || data.length === 0) {\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner/>\r\n        </div>\r\n    }\r\n\r\n    if (!data.text) {\r\n        return <p className='centered'>No quote found!</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>QuoteDetail</h1>\r\n            <HighlightedQuote text={data.text} quote={data.quote} author={data.author}/>\r\n            <Route exact path={`${match.path}`}>\r\n                <div className='centered'>\r\n                <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments/>\r\n            </Route>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuoteDetail;"],"sourceRoot":""}